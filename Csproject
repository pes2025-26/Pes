import mysql.connector as sql
import datetime as dt

# Connect to MySQL
con = sql.connect(host='localhost', user='root', passwd='root', database='COMPANY')
cur = con.cursor()

# Create login table if not exists
cur.execute("""
CREATE TABLE IF NOT EXISTS log_id(
    username VARCHAR(25) PRIMARY KEY,
    password VARCHAR(25) NOT NULL,
    gmail VARCHAR(25) NOT NULL
)
""")

# Create employee table if not exists
cur.execute("""
CREATE TABLE IF NOT EXISTS employee(
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(30),
    department VARCHAR(30),
    performance INT,
    salary FLOAT,
    phno BIGINT
)
""")

print("================================================================= Welcome to Employee Management System ===============================================================")

def boot():
    print(dt.datetime.now())
    print("\n1. REGISTER")
    print("2. LOGIN")
    print("3. EXIT\n")
    b = int(input("Enter your choice: "))
    return b


def reg():
    name = input("Enter your Username: ")
    password = input("Enter password: ")  # no need to force int
    gmail = input("Enter your Gmail: ")
    val = (name, password, gmail)
    cur.execute("INSERT INTO log_id (username, password, gmail) VALUES (%s, %s, %s)", val)
    con.commit()
    print("USER created successfully!")


def log():
    name = input("Enter the Username: ")
    password = input("Enter the Password: ")
    cur.execute("SELECT * FROM log_id WHERE username=%s AND password=%s", (name, password))
    data = cur.fetchall()
    if data == []:
        print("Invalid username or password")
    else:
        print("Login successful!")
        while True:
            menu()


def menu():
    try:
        print("\n------------------- EMPLOYEE MANAGEMENT SYSTEM -------------------")
        print("1. Add Employee")
        print("2. View All Employees")
        print("3. View Employee Details")
        print("4. Update Employee")
        print("5. Delete Employee")
        print("6. Logout\n")

        ch = int(input("Enter Your Choice: "))
        if ch == 1:
            addemp()
        elif ch == 2:
            viewall()
        elif ch == 3:
            viewempdet()
        elif ch == 4:
            upd()
        elif ch == 5:
            dels()
        elif ch == 6:
            logout()
            break  # stop the inner loop
        else:
            print("Invalid option")
    except ValueError:
        print("Enter values correctly")
        menu()


def logout():
    print("Logging out...")
    return


def dels():
    ide = int(input("Enter employee id to delete: "))
    cur.execute("DELETE FROM employee WHERE id=%s", (ide,))
    con.commit()
    print("Employee deleted successfully.")


def viewall():
    cur.execute("SELECT id, name FROM employee")
    x = cur.fetchall()
    for i in x:
        print(i)


def addemp():
    try:
        name = input("Enter name: ")
        dept = input("Enter department: ")
        perf = int(input("Rate performance out of 10: "))
        salary = float(input("Enter salary: "))
        ph = int(input("Enter phone number: "))
        det = (name, dept, perf, salary, ph)
        cur.execute("INSERT INTO employee(name, department, performance, salary, phno) VALUES (%s, %s, %s, %s, %s)", det)
        con.commit()
        print("Employee added successfully!")
    except ValueError:
        print("Enter values correctly")
        addemp()


def viewempdet():
    cur.execute("SELECT * FROM employee")
    x = cur.fetchall()
    for i in x:
        print(i)


def upd():
    print("\nEnter the detail you want to update:")
    print("1. Salary")
    print("2. Department")
    print("3. Performance")

    ch = int(input("Enter choice: "))
    ide = int(input("Enter employee ID: "))

    if ch == 1:
        sal = float(input("Enter new salary: "))
        cur.execute("UPDATE employee SET salary=%s WHERE id=%s", (sal, ide))
    elif ch == 2:
        dept = input("Enter new department: ")
        cur.execute("UPDATE employee SET department=%s WHERE id=%s", (dept, ide))
    elif ch == 3:
        perf = int(input("Enter new performance: "))
        cur.execute("UPDATE employee SET performance=%s WHERE id=%s", (perf, ide))
    else:
        print("Invalid option")
        return

    con.commit()
    print("Details updated successfully.")


# Main loop
while True:
    b = boot()
    if b == 1:
        reg()
    elif b == 2:
        log()
    elif b == 3:
        print("Goodbye!")
        break
    else:
        print("Invalid option")
